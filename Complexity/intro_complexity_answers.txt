1.An algorithm that has the efficiency of O(1) can be visualized
as the fuel consumption of a parked car while O(2^n) can be
thought of as the consumption of a car with 12 cylinders.

2.The best case scenario for binary search is when the element
you are searching for is the middle element of the list, in that
case you will find the element in single iteration.Thus the best
case scenario for binary search is said to be constant time or
O(1).

3. Binary search finds the desired element by halving the sorted
array/list and checking if it is greater or less than the element
at that index, then we start checking either half.The worst case
for binary search happens when the element being searched is not
in the array or until we reach array size of 1, i.e 1 = N/2^x
which can be calculated to log(N).

4. The bounded case for binary case can be explained as the
average of best and worst case scenarios, which is the same as
the worst case.

5. The graph resembles the graph of an exponential function.

6. infinity

7. O(2^n)

8.def worst_linear(n)
  (1).upto(n) do |i|
    puts "#{i} is the worst- case iteration to find #(i)"
  end
end

9.This is the graph of linear function.

10. O(1)
11. O(logN)
12. O(logN)
